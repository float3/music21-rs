name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.13'

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}

    - name: Cache Cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache Python packages
      uses: actions/cache@v3
      with:
        path: |
          ./venv
          ./__pycache__
        key: ${{ runner.os }}-python-${{ hashFiles('./music21/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-

    - name: Build
      run: cargo build --verbose

    - name: Run Clippy
      run: cargo clippy -- -D warnings

    - name: Check formatting
      run: cargo fmt -- --check

    - name: Run tests
      run: cargo test --verbose
